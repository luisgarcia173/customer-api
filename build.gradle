plugins {
	id 'org.springframework.boot' version '2.4.4'
	id 'io.spring.dependency-management' version '1.0.11.RELEASE'
	id 'java'
	id 'jacoco'
}

group = 'com.builders.customer'
version = '1.0.0'
sourceCompatibility = '11'

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenLocal()
	mavenCentral()
}

dependencies {
	// SpringBoot Starter
	implementation 'org.springframework.boot:spring-boot-starter-actuator'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	developmentOnly 'org.springframework.boot:spring-boot-devtools'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'

	// Lombok Annotations
	compileOnly 'org.projectlombok:lombok'
	annotationProcessor 'org.projectlombok:lombok'

	// Open API 3.0
	compile 'org.springdoc:springdoc-openapi-ui:1.5.6'
	//compile 'org.springdoc:springdoc-openapi-security:1.5.6'
	compile 'org.springdoc:springdoc-openapi-webmvc-core:1.5.6'
}

jacoco {
	toolVersion = "0.8.6"
}

jacocoTestCoverageVerification {
	violationRules {
		rule {
			element = 'CLASS'
			excludes = [
					'*Test',
					'com.builders.customer.config.*'
			]
			limit {
				counter = 'BRANCH'
				value = 'COVEREDRATIO'
				minimum = 0.8
			}
		}
	}
}

jacocoTestReport {
	reports {
		xml.enabled true
		csv.enabled false
	}
	dependsOn test
	afterEvaluate {
		classDirectories.setFrom(files(classDirectories.files.collect {
			fileTree(dir: it, exclude: [
				'**/config/**/*'
			])
		}))
	}
	finalizedBy jacocoTestCoverageVerification
}

test {
	useJUnitPlatform()
	finalizedBy jacocoTestReport
}
